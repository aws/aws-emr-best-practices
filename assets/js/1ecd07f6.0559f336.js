"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9963],{4953:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"bestpractices":[{"type":"link","label":"EMR Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/introduction","docId":"bestpractices/introduction","unlisted":false},{"type":"category","label":"Applications","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"HBase","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/bestpractices/Applications/HBase/introduction","docId":"bestpractices/Applications/HBase/introduction","unlisted":false},{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Applications/HBase/best_practice","docId":"bestpractices/Applications/HBase/best_practice","unlisted":false},{"type":"link","label":"Best Practices for HDFS","href":"/aws-emr-best-practices/docs/bestpractices/Applications/HBase/best_practice_hdfs","docId":"bestpractices/Applications/HBase/best_practice_hdfs","unlisted":false},{"type":"link","label":"Best Practices for Amazon S3","href":"/aws-emr-best-practices/docs/bestpractices/Applications/HBase/best_practice_s3","docId":"bestpractices/Applications/HBase/best_practice_s3","unlisted":false},{"type":"link","label":"Data Integrity / High Availability","href":"/aws-emr-best-practices/docs/bestpractices/Applications/HBase/data_integrity","docId":"bestpractices/Applications/HBase/data_integrity","unlisted":false},{"type":"link","label":"Data Migration","href":"/aws-emr-best-practices/docs/bestpractices/Applications/HBase/data_migration","docId":"bestpractices/Applications/HBase/data_migration","unlisted":false},{"type":"link","label":"Management","href":"/aws-emr-best-practices/docs/bestpractices/Applications/HBase/management","docId":"bestpractices/Applications/HBase/management","unlisted":false},{"type":"link","label":"Observability","href":"/aws-emr-best-practices/docs/bestpractices/Applications/HBase/observability","docId":"bestpractices/Applications/HBase/observability","unlisted":false},{"type":"link","label":"Performance Tests","href":"/aws-emr-best-practices/docs/bestpractices/Applications/HBase/performance_tests","docId":"bestpractices/Applications/HBase/performance_tests","unlisted":false},{"type":"link","label":"Security","href":"/aws-emr-best-practices/docs/bestpractices/Applications/HBase/security","docId":"bestpractices/Applications/HBase/security","unlisted":false},{"type":"link","label":"Troubleshooting","href":"/aws-emr-best-practices/docs/bestpractices/Applications/HBase/troubleshooting","docId":"bestpractices/Applications/HBase/troubleshooting","unlisted":false}]},{"type":"category","label":"Hadoop","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hadoop/introduction","docId":"bestpractices/Applications/Hadoop/introduction","unlisted":false},{"type":"link","label":"YARN Docker with GPU","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hadoop/yarn_docker_gpu","docId":"bestpractices/Applications/Hadoop/yarn_docker_gpu","unlisted":false},{"type":"link","label":"YARN Scaling with custom labels","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hadoop/yarn_labels_scaling","docId":"bestpractices/Applications/Hadoop/yarn_labels_scaling","unlisted":false},{"type":"link","label":"YARN Node Resilience with External Health Scripts","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hadoop/yarn_node_ resilience","docId":"bestpractices/Applications/Hadoop/yarn_node_ resilience","unlisted":false}]},{"type":"category","label":"Hive","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hive/introduction","docId":"bestpractices/Applications/Hive/introduction","unlisted":false},{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hive/best_practices","docId":"bestpractices/Applications/Hive/best_practices","unlisted":false}]},{"type":"category","label":"Spark","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Spark/introduction","docId":"bestpractices/Applications/Spark/introduction","unlisted":false},{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Spark/best_practices","docId":"bestpractices/Applications/Spark/best_practices","unlisted":false},{"type":"link","label":"Data Quality","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Spark/data_quality","docId":"bestpractices/Applications/Spark/data_quality","unlisted":false},{"type":"link","label":"Data Skew","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Spark/data_skew","docId":"bestpractices/Applications/Spark/data_skew","unlisted":false},{"type":"link","label":"Join Types","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Spark/joins","docId":"bestpractices/Applications/Spark/joins","unlisted":false},{"type":"link","label":"Observability","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Spark/observability","docId":"bestpractices/Applications/Spark/observability","unlisted":false},{"type":"link","label":"Performance","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Spark/performance","docId":"bestpractices/Applications/Spark/performance","unlisted":false},{"type":"link","label":"Thrift Server","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Spark/thrift","docId":"bestpractices/Applications/Spark/thrift","unlisted":false},{"type":"link","label":"Troubleshooting","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Spark/troubleshooting","docId":"bestpractices/Applications/Spark/troubleshooting","unlisted":false}]}]},{"type":"category","label":"Cost Optimizations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/bestpractices/Cost Optimizations/Introduction","docId":"bestpractices/Cost Optimizations/Introduction","unlisted":false},{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Cost Optimizations/best_practices","docId":"bestpractices/Cost Optimizations/best_practices","unlisted":false},{"type":"link","label":"Optimizing Resource Utilization","href":"/aws-emr-best-practices/docs/bestpractices/Cost Optimizations/maximizing-resource-utilization","docId":"bestpractices/Cost Optimizations/maximizing-resource-utilization","unlisted":false}]},{"type":"category","label":"Features","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"EMRFS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AIMD Retry Strategy","href":"/aws-emr-best-practices/docs/bestpractices/Features/EMRFS/aimd","docId":"bestpractices/Features/EMRFS/aimd","unlisted":false}]},{"type":"category","label":"Managed Scaling","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Features/Managed Scaling/best_practices","docId":"bestpractices/Features/Managed Scaling/best_practices","unlisted":false},{"type":"link","label":"Troubleshooting","href":"/aws-emr-best-practices/docs/bestpractices/Features/Managed Scaling/troubleshooting","docId":"bestpractices/Features/Managed Scaling/troubleshooting","unlisted":false}]},{"type":"category","label":"Spot Usage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Features/Spot Usage/best_practices","docId":"bestpractices/Features/Spot Usage/best_practices","unlisted":false}]}]},{"type":"category","label":"Observability","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/bestpractices/Observability/intro","docId":"bestpractices/Observability/intro","unlisted":false},{"type":"link","label":"CloudWatch","href":"/aws-emr-best-practices/docs/bestpractices/Observability/best_practices","docId":"bestpractices/Observability/best_practices","unlisted":false}]},{"type":"category","label":"Reliability","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/bestpractices/Reliability/introduction","docId":"bestpractices/Reliability/introduction","unlisted":false},{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Reliability/best_practices","docId":"bestpractices/Reliability/best_practices","unlisted":false}]},{"type":"category","label":"Security","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/bestpractices/Security/introduction","docId":"bestpractices/Security/introduction","unlisted":false},{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Security/best_practices","docId":"bestpractices/Security/best_practices","unlisted":false}]},{"type":"category","label":"Troubleshooting","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Resource contention","href":"/aws-emr-best-practices/docs/bestpractices/Troubleshooting/Troubleshooting EMR","docId":"bestpractices/Troubleshooting/Troubleshooting EMR","unlisted":false}]}],"benchmarks":[{"type":"link","label":"Benchmarks","href":"/aws-emr-best-practices/docs/benchmarks/introduction","docId":"benchmarks/introduction","unlisted":false},{"type":"link","label":"Price-Performance","href":"/aws-emr-best-practices/docs/benchmarks/price_performance","docId":"benchmarks/price_performance","unlisted":false},{"type":"link","label":"Benchmarking Variables","href":"/aws-emr-best-practices/docs/benchmarks/benchmarking_variables","docId":"benchmarks/benchmarking_variables","unlisted":false},{"type":"category","label":"Running your Benchmark","items":[{"type":"link","label":"Setting Up Your Environment","href":"/aws-emr-best-practices/docs/benchmarks/Running/setting_up_environment","docId":"benchmarks/Running/setting_up_environment","unlisted":false},{"type":"link","label":"Benchmarking Checklist","href":"/aws-emr-best-practices/docs/benchmarks/Running/benchmarking_checklist","docId":"benchmarks/Running/benchmarking_checklist","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Analyzing your Benchmark","items":[{"type":"link","label":"Retrieving Spark Event Logs","href":"/aws-emr-best-practices/docs/benchmarks/Analyzing/retrieve_event_logs","docId":"benchmarks/Analyzing/retrieve_event_logs","unlisted":false},{"type":"link","label":"Reading Spark UI","href":"/aws-emr-best-practices/docs/benchmarks/Analyzing/read_spark_UI","docId":"benchmarks/Analyzing/read_spark_UI","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Resources","items":[{"type":"link","label":"Benchmark Results","href":"/aws-emr-best-practices/docs/benchmarks/Resources/Benchmark_results","docId":"benchmarks/Resources/Benchmark_results","unlisted":false},{"type":"link","label":"Utilities","href":"/aws-emr-best-practices/docs/benchmarks/Resources/Utilities","docId":"benchmarks/Resources/Utilities","unlisted":false}],"collapsed":true,"collapsible":true}],"migration":[{"type":"link","label":"Migration","href":"/aws-emr-best-practices/docs/migration/introduction","docId":"migration/introduction","unlisted":false}],"utilities":[{"type":"link","label":"Amazon EMR Utilities","href":"/aws-emr-best-practices/docs/utilities/introduction","docId":"utilities/introduction","unlisted":false}]},"docs":{"benchmarks/Analyzing/read_spark_UI":{"id":"benchmarks/Analyzing/read_spark_UI","title":"Spark UI and Spark History Server Analysis","description":"In this section we\u2019re going to explore the Spark Web UI to understand what are the main sections and information it provides, to better understand how we can leverage this tool to review our benchmark results.","sidebar":"benchmarks"},"benchmarks/Analyzing/retrieve_event_logs":{"id":"benchmarks/Analyzing/retrieve_event_logs","title":"Retrieve Spark Event Logs","description":"When you want to analyze the performance of your workloads, you\u2019ll typically need to check the Spark Web UI to identify areas of improvement or just to detect events that are de-gradating the performance in your application. The Spark Web UI uses the Event Logs that are generated by each job running in your cluster to provide detailed information about Jobs, Stages and Tasks of your application that provides aggregated metrics that can help you to troubleshoot performance issues.","sidebar":"benchmarks"},"benchmarks/benchmarking_variables":{"id":"benchmarks/benchmarking_variables","title":"Benchmarking Variables","description":"The goal of EMR benchmarking is to determine the impact of variables on price-performance. Variables can be categorized as either Controlled or Independent. Independent variables are manipulated in the benchmark and are the ones that change. Controlled variables are kept consistent to accurately measure the effect of the independent variables.","sidebar":"benchmarks"},"benchmarks/introduction":{"id":"benchmarks/introduction","title":"Benchmarks","description":"The purpose of this guide is to provide a methodology for running Spark benchmarks on EMR. By following this guide, you will be able to identify the lowest price-performance option for running Spark workloads, considering various variables such as engine type (EMR, OSS), deployment models (EC2, EKS, Serverless), or hardware options (M, C, R, family).","sidebar":"benchmarks"},"benchmarks/price_performance":{"id":"benchmarks/price_performance","title":"Price Performance","description":"In the scope of this tutorial, \\"price-performance\\" signifies the monetary expense associated with executing a given workload while maintaining a specific degree of performance, expressed in terms of execution duration (seconds). Evaluating price-performance plays a vital role in understanding the impact of factors that are not easily quantifiable, such as deployment architectures, competitive offerings, container allocation strategies, and processing engines.","sidebar":"benchmarks"},"benchmarks/Resources/Benchmark_results":{"id":"benchmarks/Resources/Benchmark_results","title":"Benchmark Results","description":"Amazon EMR","sidebar":"benchmarks"},"benchmarks/Resources/Utilities":{"id":"benchmarks/Resources/Utilities","title":"Benchmarking Utilities","description":"* EMR Spark Benchmark//github.com/aws-samples/emr-spark-benchmark","sidebar":"benchmarks"},"benchmarks/Running/benchmarking_checklist":{"id":"benchmarks/Running/benchmarking_checklist","title":"Benchmarking Checklist","description":"Environment and Infrastructure","sidebar":"benchmarks"},"benchmarks/Running/setting_up_environment":{"id":"benchmarks/Running/setting_up_environment","title":"Setting up the Benchmark Environment","description":"EMR on EC2","sidebar":"benchmarks"},"bestpractices/Applications/Hadoop/introduction":{"id":"bestpractices/Applications/Hadoop/introduction","title":"Introduction","description":"This section offers recommendations and configuration guidelines for particular Hadoop aspects within Amazon EMR clusters, enabling desired performances or behaviors.","sidebar":"bestpractices"},"bestpractices/Applications/Hadoop/yarn_docker_gpu":{"id":"bestpractices/Applications/Hadoop/yarn_docker_gpu","title":"YARN Docker with GPU","description":"Overview","sidebar":"bestpractices"},"bestpractices/Applications/Hadoop/yarn_labels_scaling":{"id":"bestpractices/Applications/Hadoop/yarn_labels_scaling","title":"YARN Scaling with custom labels","description":"Overview","sidebar":"bestpractices"},"bestpractices/Applications/Hadoop/yarn_node_ resilience":{"id":"bestpractices/Applications/Hadoop/yarn_node_ resilience","title":"YARN Node Resilience with External Health Scripts","description":"Apache YARN is a critical component of the Hadoop ecosystem, responsible for managing and allocating cluster resources for various workloads. In an Amazon EMR cluster running on EC2 instances, YARN plays a crucial role in ensuring efficient and reliable execution of big data processing jobs. However, there may be scenarios where the default Node Manager functionality falls short, potentially leading to unresponsive nodes and impacting cluster performance.","sidebar":"bestpractices"},"bestpractices/Applications/HBase/best_practice":{"id":"bestpractices/Applications/HBase/best_practice","title":"Best Practice","description":"The following section describes some general HBase tuning and best practice that can be applied both when using HDFS or Amazon S3 as storage layer for HBase.","sidebar":"bestpractices"},"bestpractices/Applications/HBase/best_practice_hdfs":{"id":"bestpractices/Applications/HBase/best_practice_hdfs","title":"Best Practices for HDFS","description":"This section highlights some of the features / best practice that you could use to improve the performance in your cluster when using HDFS as storage layer for HBase.","sidebar":"bestpractices"},"bestpractices/Applications/HBase/best_practice_s3":{"id":"bestpractices/Applications/HBase/best_practice_s3","title":"Best Practices for Amazon S3","description":"This section highlights some of the features / best practice that you can use to improve the performance in your cluster when using Amazon S3 as storage layer for HBase. For additional best practice / tuning parameters, see Apache HBase on Amazon S3 configuration properties.","sidebar":"bestpractices"},"bestpractices/Applications/HBase/data_integrity":{"id":"bestpractices/Applications/HBase/data_integrity","title":"Data Integrity / High Availability","description":"The following document illustrates architectures and service features that can be combined to implement Highly Available architectures and Disaster Recovery solutions for HBase clusters running on Amazon EMR. The document also describes additional best practices for data recovery in case of integrity issues you might face when using HBase.","sidebar":"bestpractices"},"bestpractices/Applications/HBase/data_migration":{"id":"bestpractices/Applications/HBase/data_migration","title":"Data Migration","description":"This document describes possible migrations paths you can follow when migrating data from an existing HBase cluster (e.g. on premise, or self-managed cluster on EC2) to Amazon EMR.","sidebar":"bestpractices"},"bestpractices/Applications/HBase/introduction":{"id":"bestpractices/Applications/HBase/introduction","title":"Introduction","description":"When working with Amazon EMR on EC2, you have the ability to choose between two deployment options for the underlying storage layer used by HBase: the Hadoop HDFS or Amazon S3.","sidebar":"bestpractices"},"bestpractices/Applications/HBase/management":{"id":"bestpractices/Applications/HBase/management","title":"Management","description":"This section highlights some commands and best practices, that can help you to manage your HBase clusters on Amazon EMR.","sidebar":"bestpractices"},"bestpractices/Applications/HBase/observability":{"id":"bestpractices/Applications/HBase/observability","title":"Observability","description":"This section describes how you can leverage existing monitoring tools and features available in Amazon EMR to monitor and troubleshoot issues that might occur when working with HBase.","sidebar":"bestpractices"},"bestpractices/Applications/HBase/performance_tests":{"id":"bestpractices/Applications/HBase/performance_tests","title":"Performance Tests","description":"One of the most important operations to perform before start using an HBase cluster is to perform a stress test to verify if the provisioned infrastructure meets the requirements in terms of latency and throughput for your applications.","sidebar":"bestpractices"},"bestpractices/Applications/HBase/security":{"id":"bestpractices/Applications/HBase/security","title":"Security","description":"The following section describes the main security aspects that can help you to secure an HBase cluster running on Amazon EMR.","sidebar":"bestpractices"},"bestpractices/Applications/HBase/troubleshooting":{"id":"bestpractices/Applications/HBase/troubleshooting","title":"Troubleshooting","description":"Managing distributed systems like HBase and Hadoop on Amazon EMR can be complex, especially at production scale where reliability, latency, and fault tolerance are critical. This runbook provides hands-on guidance for troubleshooting, recovery, and stability improvement of HBase and Hadoop components when using Amazon EMR.","sidebar":"bestpractices"},"bestpractices/Applications/Hive/best_practices":{"id":"bestpractices/Applications/Hive/best_practices","title":"Best Practices","description":"Upgrading Hive Metastore","sidebar":"bestpractices"},"bestpractices/Applications/Hive/introduction":{"id":"bestpractices/Applications/Hive/introduction","title":"Introduction","description":"This section offers best practices and tuning guidance for running Apache Hive workloads on Amazon EMR.","sidebar":"bestpractices"},"bestpractices/Applications/Spark/best_practices":{"id":"bestpractices/Applications/Spark/best_practices","title":"Best Practices","description":"Use the most recent version of EMR","sidebar":"bestpractices"},"bestpractices/Applications/Spark/data_quality":{"id":"bestpractices/Applications/Spark/data_quality","title":"Data Quality","description":"Data quality and integrity checks with Deequ","sidebar":"bestpractices"},"bestpractices/Applications/Spark/data_skew":{"id":"bestpractices/Applications/Spark/data_skew","title":"Data Skew","description":"Data imbalance, or skew, can have a significant impact on performance in big data processing systems like Apache Spark. When one task processes an unusually large portion of the dataset compared to others, it can result in several issues:","sidebar":"bestpractices"},"bestpractices/Applications/Spark/introduction":{"id":"bestpractices/Applications/Spark/introduction","title":"Introduction","description":"This section offers best practices and tuning guidance for running Apache Spark workloads on Amazon EMR. The guidances cover the following main themes:","sidebar":"bestpractices"},"bestpractices/Applications/Spark/joins":{"id":"bestpractices/Applications/Spark/joins","title":"Join Types","description":"Choose the right type of join","sidebar":"bestpractices"},"bestpractices/Applications/Spark/observability":{"id":"bestpractices/Applications/Spark/observability","title":"Observability","description":"Debugging and monitoring","sidebar":"bestpractices"},"bestpractices/Applications/Spark/performance":{"id":"bestpractices/Applications/Spark/performance","title":"Performance","description":"Use right file formats and compression type","sidebar":"bestpractices"},"bestpractices/Applications/Spark/thrift":{"id":"bestpractices/Applications/Spark/thrift","title":"Thrift Server","description":"Long running thrift server","sidebar":"bestpractices"},"bestpractices/Applications/Spark/troubleshooting":{"id":"bestpractices/Applications/Spark/troubleshooting","title":"Troubleshooting","description":"Potential resolutions for not-so-common errors","sidebar":"bestpractices"},"bestpractices/Cost Optimizations/best_practices":{"id":"bestpractices/Cost Optimizations/best_practices","title":"Cost Optimizations","description":"This section outlines the best practices for running cost-effective workloads on Amazon EMR.","sidebar":"bestpractices"},"bestpractices/Cost Optimizations/Introduction":{"id":"bestpractices/Cost Optimizations/Introduction","title":"Introduction","description":"EMR Cost Optimization best practices focus on the continual process of refinement and improvement of a system over its entire lifecycle. From the initial design of your very first proof of concept to the ongoing operation of production workloads, adopting the practices in this document can enable you to build and operate cost-aware systems that achieve business outcomes and minimize costs, thus allowing your business to maximize its return on investment.","sidebar":"bestpractices"},"bestpractices/Cost Optimizations/maximizing-resource-utilization":{"id":"bestpractices/Cost Optimizations/maximizing-resource-utilization","title":"Optimizing Resource Utilization","description":"Cluster utilization in EMR refers to the effective use of computing resources, which include memory and CPU. The pricing structure for EMR on EC2 relies on resource usage such as CPU, memory, and disk. Ensuring optimal cluster utilization is crucial for getting the maximum value from the EMR cluster. To maintain high cluster utilization in EMR on EC2, it is essential to follow best practices. This includes configuring managed scaling, adjusting container sizes at the application level (requiring EMR observability setup), and selecting the right EC2 instance types, as explained in this document.","sidebar":"bestpractices"},"bestpractices/Features/EMRFS/aimd":{"id":"bestpractices/Features/EMRFS/aimd","title":"AIMD Retry Strategy for Amazon S3 Requests in EMRFS","description":"Amazon EMR File System (EMRFS) is a feature that allows Amazon EMR clusters to directly access data stored in Amazon S3. However, in large clusters, the high volume of S3 requests can sometimes lead to throttling exceptions from S3. To address this issue, starting with Amazon EMR release 6.4.0, EMRFS supports an alternative retry strategy based on the Additive Increase/Multiplicative Decrease (AIMD) algorithm.","sidebar":"bestpractices"},"bestpractices/Features/Managed Scaling/best_practices":{"id":"bestpractices/Features/Managed Scaling/best_practices","title":"Managed Scaling","description":"Managed scaling lets you automatically increase or decrease the number of instances or units in your cluster based on workload. Amazon EMR continuously evaluates cluster metrics to make scaling decisions that optimize your clusters for cost and speed. Managed scaling is available for clusters composed of either instance groups or instance fleets.","sidebar":"bestpractices"},"bestpractices/Features/Managed Scaling/troubleshooting":{"id":"bestpractices/Features/Managed Scaling/troubleshooting","title":"Troubleshooting","description":"Overview","sidebar":"bestpractices"},"bestpractices/Features/Spot Usage/best_practices":{"id":"bestpractices/Features/Spot Usage/best_practices","title":"Spot Usage","description":"When to use spot vs. on demand","sidebar":"bestpractices"},"bestpractices/introduction":{"id":"bestpractices/introduction","title":"EMR Best Practices","description":"Welcome to the EMR Best Practices Guides.  The goal of this project is to offer a set of best practices, templates and guides for operating Amazon EMR. We elected to publish this guidance to GitHub so we could iterate quickly, provide timely and effective recommendations for variety of concerns, and easily incorporate suggestions from the broader community.","sidebar":"bestpractices"},"bestpractices/Observability/best_practices":{"id":"bestpractices/Observability/best_practices","title":"Monitor Cluster Performance with CloudWatch","description":"Amazon EMR allows you to process vast amounts of data quickly and cost-effectively. However, monitoring the performance of your EMR clusters is crucial to ensure optimal resource utilization and efficient job execution. One powerful tool for monitoring EMR clusters is Amazon CloudWatch, a monitoring and observability service provided by AWS.","sidebar":"bestpractices"},"bestpractices/Observability/intro":{"id":"bestpractices/Observability/intro","title":"CloudWatch","description":"Amazon EMR automatically publishes a set of free metrics to CloudWatch every five minutes to help monitor cluster activity and health.","sidebar":"bestpractices"},"bestpractices/Reliability/best_practices":{"id":"bestpractices/Reliability/best_practices","title":"Reliability","description":"Best Practices (BP) for running reliable workloads on EMR.","sidebar":"bestpractices"},"bestpractices/Reliability/introduction":{"id":"bestpractices/Reliability/introduction","title":"Introduction","description":"EMR Reliability best practices discusses how to recover from infrastructure or service disruptions, dynamically acquire computing resources to meet demand, imprve availability of resources when required and mitigate disruptions such as misconfiguration or transient network issues.","sidebar":"bestpractices"},"bestpractices/Security/best_practices":{"id":"bestpractices/Security/best_practices","title":"Security","description":"Best Practices (BP) for running secure workloads on EMR.","sidebar":"bestpractices"},"bestpractices/Security/introduction":{"id":"bestpractices/Security/introduction","title":"Introduction","description":"EMR Security best practices discusses how to take advantage of AWS and EMR features to protect data, systems, and assets in a way that can improve your security posture.","sidebar":"bestpractices"},"bestpractices/Troubleshooting/Troubleshooting EMR":{"id":"bestpractices/Troubleshooting/Troubleshooting EMR","title":"Resource contention","description":"*Overview*","sidebar":"bestpractices"},"migration/introduction":{"id":"migration/introduction","title":"Migration","description":"This section provides best practice guides and tools to migrate data processing applications from self-managed environments to Amazon EMR.","sidebar":"migration"},"utilities/introduction":{"id":"utilities/introduction","title":"Amazon EMR","description":"EMR Utilities","sidebar":"utilities"}}}}')}}]);