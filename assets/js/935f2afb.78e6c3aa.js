"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"genai":[],"blueprints":[],"bestpractices":[{"type":"link","label":"EMR Best Practices Introduction","href":"/aws-emr-best-practices/docs/bestpractices/","docId":"bestpractices/bestpractices","unlisted":false},{"type":"category","label":"Cost Optimizations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/bestpractices/Cost Optimizations/Introduction","docId":"bestpractices/Cost Optimizations/Introduction","unlisted":false},{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Cost Optimizations/best_practices","docId":"bestpractices/Cost Optimizations/best_practices","unlisted":false}]},{"type":"category","label":"Reliability","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/bestpractices/Reliability/introduction","docId":"bestpractices/Reliability/introduction","unlisted":false},{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Reliability/best_practices","docId":"bestpractices/Reliability/best_practices","unlisted":false}]},{"type":"category","label":"Security","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/bestpractices/Security/introduction","docId":"bestpractices/Security/introduction","unlisted":false},{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Security/best_practices","docId":"bestpractices/Security/best_practices","unlisted":false}]},{"type":"category","label":"Features","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Managed Scaling","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Features/Managed Scaling/best_practices","docId":"bestpractices/Features/Managed Scaling/best_practices","unlisted":false}]},{"type":"category","label":"Spot Usage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Features/Spot Usage/best_practices","docId":"bestpractices/Features/Spot Usage/best_practices","unlisted":false}]}]},{"type":"category","label":"Applications","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Hbase","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hbase/introduction","docId":"bestpractices/Applications/Hbase/introduction","unlisted":false},{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hbase/best_practice","docId":"bestpractices/Applications/Hbase/best_practice","unlisted":false},{"type":"link","label":"Best Practice for HDFS","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hbase/best_practice_hdfs","docId":"bestpractices/Applications/Hbase/best_practice_hdfs","unlisted":false},{"type":"link","label":"Best Practice for Amazon S3","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hbase/best_practice_s3","docId":"bestpractices/Applications/Hbase/best_practice_s3","unlisted":false},{"type":"link","label":"Data Integrity / Disaster Recovery / High Availability","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hbase/data_integrity","docId":"bestpractices/Applications/Hbase/data_integrity","unlisted":false},{"type":"link","label":"Data Migration","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hbase/data_migration","docId":"bestpractices/Applications/Hbase/data_migration","unlisted":false},{"type":"link","label":"Management","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hbase/management","docId":"bestpractices/Applications/Hbase/management","unlisted":false},{"type":"link","label":"Observability","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hbase/observability","docId":"bestpractices/Applications/Hbase/observability","unlisted":false},{"type":"link","label":"Performance Tests","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hbase/performance_tests","docId":"bestpractices/Applications/Hbase/performance_tests","unlisted":false},{"type":"link","label":"Security","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hbase/security","docId":"bestpractices/Applications/Hbase/security","unlisted":false}]},{"type":"category","label":"Hive","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hive/introduction","docId":"bestpractices/Applications/Hive/introduction","unlisted":false},{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Hive/best_practices","docId":"bestpractices/Applications/Hive/best_practices","unlisted":false}]},{"type":"category","label":"Spark","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Spark/introduction","docId":"bestpractices/Applications/Spark/introduction","unlisted":false},{"type":"link","label":"Trouble Shooting and Perofrmance Tuning","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Spark/troubleshooting_and_tuning","docId":"bestpractices/Applications/Spark/troubleshooting_and_tuning","unlisted":false},{"type":"link","label":"Best Practices","href":"/aws-emr-best-practices/docs/bestpractices/Applications/Spark/best_practices","docId":"bestpractices/Applications/Spark/best_practices","unlisted":false}]}]},{"type":"category","label":"Architecture","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Adhoc","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/bestpractices/Architecture/Adhoc/introduction","docId":"bestpractices/Architecture/Adhoc/introduction","unlisted":false},{"type":"link","label":"Ad Hoc - Architecture","href":"/aws-emr-best-practices/docs/bestpractices/Architecture/Adhoc/architecture","docId":"bestpractices/Architecture/Adhoc/architecture","unlisted":false}]},{"type":"category","label":"Batch","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"introduction","href":"/aws-emr-best-practices/docs/bestpractices/Architecture/Batch/introduction","docId":"bestpractices/Architecture/Batch/introduction","unlisted":false}]},{"type":"category","label":"Notebooks","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"introduction","href":"/aws-emr-best-practices/docs/bestpractices/Architecture/Notebooks/introduction","docId":"bestpractices/Architecture/Notebooks/introduction","unlisted":false}]},{"type":"category","label":"Open Table Formats","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"introduction","href":"/aws-emr-best-practices/docs/bestpractices/Architecture/Open Table Formats/introduction","docId":"bestpractices/Architecture/Open Table Formats/introduction","unlisted":false}]}]}],"resources":[],"benchmarks":[{"type":"link","label":"Introduction","href":"/aws-emr-best-practices/docs/benchmarks/introduction","docId":"benchmarks/introduction","unlisted":false},{"type":"link","label":"Price-Performance","href":"/aws-emr-best-practices/docs/benchmarks/price_performance","docId":"benchmarks/price_performance","unlisted":false},{"type":"link","label":"Benchmarking Variables","href":"/aws-emr-best-practices/docs/benchmarks/benchmarking_variables","docId":"benchmarks/benchmarking_variables","unlisted":false},{"type":"category","label":"Running your Benchmark","items":[{"type":"link","label":"Setting Up Your Environment","href":"/aws-emr-best-practices/docs/benchmarks/Running/setting_up_environment","docId":"benchmarks/Running/setting_up_environment","unlisted":false},{"type":"link","label":"Benchmarking Checklist","href":"/aws-emr-best-practices/docs/benchmarks/Running/benchmarking_checklist","docId":"benchmarks/Running/benchmarking_checklist","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Analyzing your Benchmark","items":[{"type":"link","label":"Retrieving Spark Event Logs","href":"/aws-emr-best-practices/docs/benchmarks/Analyzing/retrieve_event_logs","docId":"benchmarks/Analyzing/retrieve_event_logs","unlisted":false},{"type":"link","label":"Reading Spark UI","href":"/aws-emr-best-practices/docs/benchmarks/Analyzing/read_spark_UI","docId":"benchmarks/Analyzing/read_spark_UI","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Resources","items":[{"type":"link","label":"Benchmark Results","href":"/aws-emr-best-practices/docs/benchmarks/Resources/Benchmark_results","docId":"benchmarks/Resources/Benchmark_results","unlisted":false},{"type":"link","label":"Utilities","href":"/aws-emr-best-practices/docs/benchmarks/Resources/Utilities","docId":"benchmarks/Resources/Utilities","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"benchmarks/Analyzing/read_spark_UI":{"id":"benchmarks/Analyzing/read_spark_UI","title":"Spark UI and Spark History Server Analysis","description":"In this section we\u2019re going to explore the Spark Web UI to understand what are the main sections and information it provides, to better understand how we can leverage this tool to review our benchmark results.","sidebar":"benchmarks"},"benchmarks/Analyzing/retrieve_event_logs":{"id":"benchmarks/Analyzing/retrieve_event_logs","title":"Retrieve Spark Event Logs","description":"When you want to analyze the performance of your workloads, you\u2019ll typically need to check the Spark Web UI to identify areas of improvement or just to detect events that are de-gradating the performance in your application. The Spark Web UI uses the Event Logs that are generated by each job running in your cluster to provide detailed information about Jobs, Stages and Tasks of your application that provides aggregated metrics that can help you to troubleshoot performance issues.","sidebar":"benchmarks"},"benchmarks/benchmarking_variables":{"id":"benchmarks/benchmarking_variables","title":"Benchmarking Variables","description":"The goal of EMR benchmarking is to determine the impact of variables on price-performance. Variables can be categorized as either Controlled or Independent. Independent variables are manipulated in the benchmark and are the ones that change. Controlled variables are kept consistent to accurately measure the effect of the independent variables.","sidebar":"benchmarks"},"benchmarks/introduction":{"id":"benchmarks/introduction","title":"Introduction","description":"The purpose of this guide is to provide a methodology for running Spark benchmarks on EMR. By following this guide, you will be able to identify the lowest price-performance option for running Spark workloads, considering various variables such as engine type (EMR, OSS), deployment models (EC2, EKS, Serverless), or hardware options (M, C, R, family).","sidebar":"benchmarks"},"benchmarks/price_performance":{"id":"benchmarks/price_performance","title":"Price Performance","description":"In the context of this guide, \\"price-performance\\" refers to the cost (in dollars) of running a workload for a specified level of performance (measured in run time, in seconds). Utilizing price-performance is crucial for benchmarking to grasp the implications of variables that cannot be standardized. These variables may include deployment models, competitor pricing, container scheduling, or engines.","sidebar":"benchmarks"},"benchmarks/Resources/Benchmark_results":{"id":"benchmarks/Resources/Benchmark_results","title":"Benchmark Results","description":"Spark","sidebar":"benchmarks"},"benchmarks/Resources/Utilities":{"id":"benchmarks/Resources/Utilities","title":"Benchmarking Utilities","description":"EMR Spark Benchmark//github.com/aws-samples/emr-spark-benchmark","sidebar":"benchmarks"},"benchmarks/Running/benchmarking_checklist":{"id":"benchmarks/Running/benchmarking_checklist","title":"Benchmarking Checklist","description":"Environment and Infrastructure Checklist","sidebar":"benchmarks"},"benchmarks/Running/setting_up_environment":{"id":"benchmarks/Running/setting_up_environment","title":"Setting up the Benchmark Environment","description":"EMR on EC2","sidebar":"benchmarks"},"bestpractices/Applications/Hbase/best_practice":{"id":"bestpractices/Applications/Hbase/best_practice","title":"Best Practice","description":"The following section describes some general HBase tuning and best practice that can be applied both when using HDFS or Amazon S3 as storage layer for HBase.","sidebar":"bestpractices"},"bestpractices/Applications/Hbase/best_practice_hdfs":{"id":"bestpractices/Applications/Hbase/best_practice_hdfs","title":"Best Practice for HDFS","description":"This section highlights some of the features / best practice that you could use to improve the performance in your cluster when using HDFS as storage layer for HBase.","sidebar":"bestpractices"},"bestpractices/Applications/Hbase/best_practice_s3":{"id":"bestpractices/Applications/Hbase/best_practice_s3","title":"Best Practice for Amazon S3","description":"This section highlights some of the features / best practice that you can use to improve the performance in your cluster when using Amazon S3 as storage layer for HBase. For additional best practice / tuning parameters, see Apache HBase on Amazon S3 configuration properties.","sidebar":"bestpractices"},"bestpractices/Applications/Hbase/data_integrity":{"id":"bestpractices/Applications/Hbase/data_integrity","title":"Data Integrity / Disaster Recovery / High Availability","description":"The following document illustrates architectures and service features that can be combined to implement Highly Available architectures and Disaster Recovery solutions for HBase clusters running on Amazon EMR. The document also describes additional best practices for data recovery in case of integrity issues you might face when using HBase.","sidebar":"bestpractices"},"bestpractices/Applications/Hbase/data_migration":{"id":"bestpractices/Applications/Hbase/data_migration","title":"Data Migration","description":"This document describes possible migrations paths you can follow when migrating data from an existing HBase cluster (e.g. on premise, or self-managed cluster on EC2) to Amazon EMR.","sidebar":"bestpractices"},"bestpractices/Applications/Hbase/introduction":{"id":"bestpractices/Applications/Hbase/introduction","title":"Introduction","description":"When working with Amazon EMR on EC2, you have the ability to choose between two deployment options for the underlying storage layer used by HBase: the Hadoop HDFS or Amazon S3.","sidebar":"bestpractices"},"bestpractices/Applications/Hbase/management":{"id":"bestpractices/Applications/Hbase/management","title":"Management","description":"This section highlights some commands and best practices, that can help you to manage your HBase clusters on Amazon EMR.","sidebar":"bestpractices"},"bestpractices/Applications/Hbase/observability":{"id":"bestpractices/Applications/Hbase/observability","title":"Observability","description":"This section describes how you can leverage existing monitoring tools and features available in Amazon EMR to monitor and troubleshoot issues that might occur when working with HBase.","sidebar":"bestpractices"},"bestpractices/Applications/Hbase/performance_tests":{"id":"bestpractices/Applications/Hbase/performance_tests","title":"Performance Tests","description":"One of the most important operations to perform before start using an HBase cluster is to perform a stress test to verify if the provisioned infrastructure meets the requirements in terms of latency and throughput for your applications.","sidebar":"bestpractices"},"bestpractices/Applications/Hbase/security":{"id":"bestpractices/Applications/Hbase/security","title":"Security","description":"The following section describes the main security aspects that can help you to secure an HBase cluster running on Amazon EMR.","sidebar":"bestpractices"},"bestpractices/Applications/Hive/best_practices":{"id":"bestpractices/Applications/Hive/best_practices","title":"5.2 - Hive","description":"BP 5.2.1  -  Upgrading Hive Metastore","sidebar":"bestpractices"},"bestpractices/Applications/Hive/introduction":{"id":"bestpractices/Applications/Hive/introduction","title":"Introduction","description":"This section offers best practices and tuning guidance for running Apache Hive workloads on Amazon EMR.","sidebar":"bestpractices"},"bestpractices/Applications/Spark/best_practices":{"id":"bestpractices/Applications/Spark/best_practices","title":"5.1 - Spark","description":"BP 5.1.1  -  Use the most recent version of EMR","sidebar":"bestpractices"},"bestpractices/Applications/Spark/introduction":{"id":"bestpractices/Applications/Spark/introduction","title":"Introduction","description":"This section offers best practices and tuning guidance for running Apache Spark workloads on Amazon EMR. The guidances cover the following main themes:","sidebar":"bestpractices"},"bestpractices/Applications/Spark/troubleshooting_and_tuning":{"id":"bestpractices/Applications/Spark/troubleshooting_and_tuning","title":"5.2 - Spark troubleshooting and performance tuning","description":"5.2.1  -  Spark Structured Streaming applications have high Connection Create Rate to Amazon MSK","sidebar":"bestpractices"},"bestpractices/Architecture/Adhoc/architecture":{"id":"bestpractices/Architecture/Adhoc/architecture","title":"Ad Hoc - Architecture","description":"The following diagram illustrates a common architecture to use PrestoSQL/Trino on Amazon EMR with the Glue Data Catalog as a big data query engine to query data in Amazon S3 using standard SQL.","sidebar":"bestpractices"},"bestpractices/Architecture/Adhoc/introduction":{"id":"bestpractices/Architecture/Adhoc/introduction","title":"** Ad Hoc - Introduction **","description":"Amazon EMR on EC2 provides a number of engines to support your ad hoc query use cases. Trino, (formely PrestoSQL) has become a popular choice for its low latency, ANSI SQL standard, ease of use and integrations with Amazon EMR feature set.","sidebar":"bestpractices"},"bestpractices/Architecture/Batch/introduction":{"id":"bestpractices/Architecture/Batch/introduction","title":"introduction","description":"coming soon...","sidebar":"bestpractices"},"bestpractices/Architecture/Notebooks/introduction":{"id":"bestpractices/Architecture/Notebooks/introduction","title":"introduction","description":"coming soon...","sidebar":"bestpractices"},"bestpractices/Architecture/Open Table Formats/introduction":{"id":"bestpractices/Architecture/Open Table Formats/introduction","title":"introduction","description":"coming soon...","sidebar":"bestpractices"},"bestpractices/bestpractices":{"id":"bestpractices/bestpractices","title":"Introduction","description":"Welcome to the EMR Best Practices Guides.  The goal of this project is to offer a set of best practices, templates and guides for operating Amazon EMR. We elected to publish this guidance to GitHub so we could iterate quickly, provide timely and effective recommendations for variety of concerns, and easily incorporate suggestions from the broader community.","sidebar":"bestpractices"},"bestpractices/Cost Optimizations/best_practices":{"id":"bestpractices/Cost Optimizations/best_practices","title":"Cost Optimizations","description":"Best Practices (BP) for running cost optimized workloads on EMR.","sidebar":"bestpractices"},"bestpractices/Cost Optimizations/Introduction":{"id":"bestpractices/Cost Optimizations/Introduction","title":"Introduction","description":"EMR Cost Optimization best practices focus on the continual process of refinement and improvement of a system over its entire lifecycle. From the initial design of your very first proof of concept to the ongoing operation of production workloads, adopting the practices in this document can enable you to build and operate cost-aware systems that achieve business outcomes and minimize costs, thus allowing your business to maximize its return on investment.","sidebar":"bestpractices"},"bestpractices/Features/Managed Scaling/best_practices":{"id":"bestpractices/Features/Managed Scaling/best_practices","title":"4.1 - Managed Scaling","description":"Managed scaling lets you automatically increase or decrease the number of instances or units in your cluster based on workload. Amazon EMR continuously evaluates cluster metrics to make scaling decisions that optimize your clusters for cost and speed. Managed scaling is available for clusters composed of either instance groups or instance fleets.","sidebar":"bestpractices"},"bestpractices/Features/Spot Usage/best_practices":{"id":"bestpractices/Features/Spot Usage/best_practices","title":"4.2 - Spot Usage","description":"BP 4.2.1 When to use spot vs. on demand","sidebar":"bestpractices"},"bestpractices/Reliability/best_practices":{"id":"bestpractices/Reliability/best_practices","title":"2 - Reliability","description":"Best Practices (BP) for running reliable workloads on EMR.","sidebar":"bestpractices"},"bestpractices/Reliability/introduction":{"id":"bestpractices/Reliability/introduction","title":"Introduction","description":"EMR Reliability best practices discusses how to recover from infrastructure or service disruptions, dynamically acquire computing resources to meet demand, imprve availability of resources when required and mitigate disruptions such as misconfiguration or transient network issues.","sidebar":"bestpractices"},"bestpractices/Security/best_practices":{"id":"bestpractices/Security/best_practices","title":"3 - Security","description":"Best Practices (BP) for running secure workloads on EMR.","sidebar":"bestpractices"},"bestpractices/Security/introduction":{"id":"bestpractices/Security/introduction","title":"Introduction","description":"EMR Security best practices discusses how to take advantage of AWS and EMR features to protect data, systems, and assets in a way that can improve your security posture.","sidebar":"bestpractices"},"utilities/README":{"id":"utilities/README","title":"Amazon EMR Utilities","description":"https://github.com/aws-samples/aws-emr-utilities"}}}')}}]);